name: Run tests and measure code coverage

on: [push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./.devcontainer/gh-actions.dockerfile
        push: false
        tags: pymake:latest

    - name: Start docker container
      run: >
        docker run --rm -itd --name pymake -v "$GITHUB_WORKSPACE:/repo"
        --env PYTHONPATH="/repo/source"
        pymake:latest

    - name: Run unit tests
      run: >
        docker exec -w "/repo" pymake
        pytest --cov=pymake --cov-branch --cov-report=xml tests/unit

    - name: Run integration tests
      run: >
        docker exec -w "/repo" pymake
        pytest --cov=pymake --cov-branch --cov-report=xml --cov-append
        tests/integration

    - name: Dump code coverage
      if: success()
      run: >
        docker exec -w "/repo" pymake
        coverage report --show-missing

    - name: Record code coverage
      if: success()
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: false
        indicators: true
        output: both
        thresholds: '75 90'

    - name: Set code coverage env variables
      if: success()
      run: |
        cd "$GITHUB_WORKSPACE"
        COVERAGE=$(coverage report | awk 'END { print $(NF) }')
        VALUE=$(echo $COVERAGE | grep -oP "\d+")
        echo "COVERAGE_PERCENT=$COVERAGE" >> $GITHUB_ENV
        echo "COVERAGE_VALUE=$VALUE" >> $GITHUB_ENV

    - name: Update code coverage badge
      if: success()
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 44526288c8a6404b92d17b67a9b95d8f
        filename: coverage.json
        label: Coverage
        message: ${{ env.COVERAGE_PERCENT }}
        valColorRange: ${{ env.COVERAGE_VALUE}}
        maxColorRange: 90
        minColorRange: 0

    - name: Stop docker container
      run: docker stop pymake
