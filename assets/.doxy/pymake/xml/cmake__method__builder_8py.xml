<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="cmake__method__builder_8py" kind="file" language="Python">
    <compoundname>cmake_method_builder.py</compoundname>
    <innerclass refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder" prot="public">pymake::generators::cmake_method_builder::CMakeMethodBuilder</innerclass>
    <innernamespace refid="namespacepymake_1_1generators_1_1cmake__method__builder">pymake::generators::cmake_method_builder</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacepymake_1_1generators_1_1cmake__method__builder" refkind="compound"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>annotations</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacepymake_1_1generators_1_1text__generator" kindref="compound">pymake.generators.text_generator</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>TextGenerator</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymake.tracing.caller_info<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>CallerInfo</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pymake.tracing.caller_info_formatter<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ICallerInfoFormatter</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>types<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>TracebackType</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Iterable,<sp/>Optional,<sp/>Type</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder" kindref="compound">CMakeMethodBuilder</ref>:</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Helper<sp/>type<sp/>used<sp/>to<sp/>generate<sp/>a<sp/>CMake<sp/>method.</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1a13dac8e54f63f76c8b5e49245b8a463d" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formatter:<sp/>ICallerInfoFormatter,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generator:<sp/>TextGenerator,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>method_name:<sp/>str):</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>the<sp/>builder.</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>generator<sp/>Generator<sp/>to<sp/>write<sp/>the<sp/>generated<sp/>code<sp/>to.</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>method_name<sp/>Name<sp/>of<sp/>the<sp/>method.</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caller_info<sp/>=<sp/>CallerInfo.closest_external_frame()</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caller_info_str<sp/>=<sp/>formatter.format(caller_info)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1a52da5f2accd180b2cea0dedd39043213" kindref="member">_generator</ref>_generator<sp/>=<sp/>generator</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1ab2571fc8f60fac568b23994bf7f2eece" kindref="member">_arguments_added</ref>_arguments_added<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Only<sp/>add<sp/>the<sp/>tracing<sp/>information<sp/>if<sp/>it&apos;s<sp/>not<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>caller_info_str:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1a52da5f2accd180b2cea0dedd39043213" kindref="member">_generator</ref>_generator.append_line(f</highlight><highlight class="stringliteral">&quot;#<sp/>{formatter.format(caller_info)}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Open<sp/>the<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1a52da5f2accd180b2cea0dedd39043213" kindref="member">_generator</ref>_generator.append_line(f</highlight><highlight class="stringliteral">&quot;{method_name}(&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1a52da5f2accd180b2cea0dedd39043213" kindref="member">_generator</ref>_generator.indentation_level<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1ac5d5eac144aecb189c90dd040598de50" kindref="member">add_arguments</ref>(self,<sp/>arguments:<sp/>str<sp/>|<sp/>Iterable[str])<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Adds<sp/>keyword-less<sp/>argument(s)<sp/>to<sp/>the<sp/>method.</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(arguments,<sp/>str):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments<sp/>=<sp/>[arguments]</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1ab2571fc8f60fac568b23994bf7f2eece" kindref="member">_arguments_added</ref>_arguments_added<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>argument<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>arguments:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1a52da5f2accd180b2cea0dedd39043213" kindref="member">_generator</ref>_generator.append_line(argument)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1aa58a4dd8c207099b25c6be003204b9b0" kindref="member">add_keyword_arguments</ref>(self,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyword:<sp/>str,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments:<sp/>str<sp/>|<sp/>Iterable[str])<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Adds<sp/>argument(s)<sp/>under<sp/>a<sp/>method<sp/>parameter<sp/>keyword<sp/>to<sp/>the<sp/>method.</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>keyword<sp/>Keyword<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>arguments<sp/>Argument(s)<sp/>to<sp/>add.</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(arguments,<sp/>str):</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments<sp/>=<sp/>[arguments]</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1ab2571fc8f60fac568b23994bf7f2eece" kindref="member">_arguments_added</ref>_arguments_added<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Place<sp/>the<sp/>keyword<sp/>on<sp/>the<sp/>current<sp/>indentation<sp/>level,<sp/>then<sp/>use<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>increased<sp/>indentation<sp/>level<sp/>for<sp/>the<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1a52da5f2accd180b2cea0dedd39043213" kindref="member">_generator</ref>_generator.append_line(f</highlight><highlight class="stringliteral">&quot;{keyword}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1a52da5f2accd180b2cea0dedd39043213" kindref="member">_generator</ref>_generator.increase_indentation_level()</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>argument<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>arguments:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1a52da5f2accd180b2cea0dedd39043213" kindref="member">_generator</ref>_generator.append_line(argument)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1a52da5f2accd180b2cea0dedd39043213" kindref="member">_generator</ref>_generator.decrease_indentation_level()</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1a8131792fc1d2ef048cbdb7c729642416" kindref="member">__enter__</ref>(self)<sp/>-&gt;<sp/>CMakeMethodBuilder:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Enters<sp/>the<sp/>method<sp/>block.</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1a7221cccb1a8c5ca0fb70b4a877b43afc" kindref="member">__exit__</ref>(self,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exc_type:<sp/>Optional[Type[BaseException]],</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exc_value:<sp/>Optional[BaseException],</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traceback:<sp/>Optional[TracebackType])<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exits<sp/>the<sp/>method<sp/>block.</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>exc_type<sp/>Type<sp/>of<sp/>exception<sp/>that<sp/>was<sp/>raised.</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>exc_value<sp/>Value<sp/>of<sp/>the<sp/>exception<sp/>that<sp/>was<sp/>raised.</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>traceback<sp/>Traceback<sp/>of<sp/>the<sp/>exception<sp/>that<sp/>was<sp/>raised.</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@returns<sp/>True<sp/>if<sp/>the<sp/>exception<sp/>should<sp/>be<sp/>suppressed,<sp/>otherwise<sp/>False.</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>no<sp/>arguments<sp/>were<sp/>added,<sp/>remove<sp/>the<sp/>newline<sp/>character<sp/>that<sp/>was</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>added<sp/>after<sp/>the<sp/>opening<sp/>parenthesis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1ab2571fc8f60fac568b23994bf7f2eece" kindref="member">_arguments_added</ref>_arguments_added:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1a52da5f2accd180b2cea0dedd39043213" kindref="member">_generator</ref>_generator.remove_last_instance_of(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>should<sp/>be<sp/>a<sp/>no-op,<sp/>but<sp/>is<sp/>included<sp/>just<sp/>in<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1a52da5f2accd180b2cea0dedd39043213" kindref="member">_generator</ref>_generator.finish_line()</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1a52da5f2accd180b2cea0dedd39043213" kindref="member">_generator</ref>_generator.decrease_indentation_level()</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Finish<sp/>the<sp/>line<sp/>with<sp/>the<sp/>parenthesis<sp/>and<sp/>add<sp/>a<sp/>new<sp/>line<sp/>afterwards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>to<sp/>separate<sp/>this<sp/>method<sp/>call<sp/>from<sp/>the<sp/>next<sp/>line<sp/>of<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1cmake__method__builder_1_1CMakeMethodBuilder_1a52da5f2accd180b2cea0dedd39043213" kindref="member">_generator</ref>_generator.append_line(</highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="source/pymake/generators/cmake_method_builder.py"/>
  </compounddef>
</doxygen>
