<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="text__generator_8py" kind="file" language="Python">
    <compoundname>text_generator.py</compoundname>
    <innerclass refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator" prot="public">pymake::generators::text_generator::TextGenerator</innerclass>
    <innernamespace refid="namespacepymake_1_1generators_1_1text__generator">pymake::generators::text_generator</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator" kindref="compound">TextGenerator</ref>:</highlight></codeline>
<codeline lineno="2"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Helper<sp/>type<sp/>used<sp/>to<sp/>format<sp/>a<sp/>text<sp/>string<sp/>to<sp/>make<sp/>it<sp/>easy<sp/>for<sp/>humans<sp/>to<sp/>read.</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a32165f20a2c410309417b46cfc157f8f" kindref="member">__init__</ref>(self,<sp/>use_spaces:<sp/>bool<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>tab_size:<sp/>int<sp/>=<sp/>4):</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>the<sp/>generator.</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>use_spaces<sp/>Whether<sp/>spaces<sp/>should<sp/>be<sp/>used<sp/>in<sp/>the<sp/>generated<sp/>string.</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>tab_size<sp/>Only<sp/>used<sp/>if<sp/>`use_spaces`<sp/>is<sp/>true.<sp/>Determines<sp/>the<sp/>number</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>spaces<sp/>inserted<sp/>for<sp/>each<sp/>indentation<sp/>level.</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>String<sp/>that<sp/>will<sp/>be<sp/>added<sp/>to<sp/>as<sp/>text<sp/>is<sp/>generated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1acc1ca774ac2d0697d8576eb06b776298" kindref="member">_text</ref>_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Current<sp/>indentation<sp/>level<sp/>to<sp/>use<sp/>for<sp/>newly<sp/>added<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a8291810e5f2f34fb1416e3e55e441b81" kindref="member">_indent_level</ref>_indent_level<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>use_spaces:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a440e322ff0361cd8dcccd59a04b13214" kindref="member">_indent</ref>_indent<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>*<sp/>tab_size</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a440e322ff0361cd8dcccd59a04b13214" kindref="member">_indent</ref>_indent<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a72f14829a2d2b587031f5e85b41a8d54" kindref="member">at_start_of_line</ref>(self)<sp/>-&gt;<sp/>bool:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gets<sp/>whether<sp/>the<sp/>generator<sp/>is<sp/>at<sp/>the<sp/>start<sp/>of<sp/>a<sp/>new<sp/>line.</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len(self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1acc1ca774ac2d0697d8576eb06b776298" kindref="member">_text</ref>_text)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1acc1ca774ac2d0697d8576eb06b776298" kindref="member">_text</ref>_text[-1]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a8bedf077e3d78deea2bd16b312b72d43" kindref="member">indentation_level</ref>(self)<sp/>-&gt;<sp/>int:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gets<sp/>the<sp/>current<sp/>indentation<sp/>level.</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a8291810e5f2f34fb1416e3e55e441b81" kindref="member">_indent_level</ref>_indent_level</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@indentation_level.setter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a8bedf077e3d78deea2bd16b312b72d43" kindref="member">indentation_level</ref>(self,<sp/>value:<sp/>int)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sets<sp/>the<sp/>current<sp/>indentation<sp/>level.</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>value<sp/>New<sp/>indentation<sp/>level.</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@throws<sp/>ValueError<sp/>Thrown<sp/>if<sp/>the<sp/>indentation<sp/>level<sp/>is<sp/>negative.</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>value<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Indentation<sp/>level<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>0.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a8291810e5f2f34fb1416e3e55e441b81" kindref="member">_indent_level</ref>_indent_level<sp/>=<sp/>value</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a81e7bec3bdcacc43b55e9dbe891e005b" kindref="member">text</ref>(self)<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gets<sp/>the<sp/>string<sp/>containing<sp/>the<sp/>generated<sp/>text.</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1acc1ca774ac2d0697d8576eb06b776298" kindref="member">_text</ref>_text</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1adc5f44c0a319b77a1da9a0f97917cb0a" kindref="member">append</ref>(self,<sp/>text:<sp/>str)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Adds<sp/>text<sp/>to<sp/>the<sp/>generator.</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>will<sp/>not<sp/>append<sp/>a<sp/>newline<sp/>character<sp/>to<sp/>the<sp/>added<sp/>text.</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>text<sp/>Text<sp/>to<sp/>add.</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>the<sp/>generator<sp/>is<sp/>at<sp/>the<sp/>start<sp/>of<sp/>a<sp/>new<sp/>line,<sp/>apply<sp/>the<sp/>indentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>level<sp/>before<sp/>adding<sp/>the<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1acc1ca774ac2d0697d8576eb06b776298" kindref="member">_text</ref>_text)<sp/>&gt;<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1acc1ca774ac2d0697d8576eb06b776298" kindref="member">_text</ref>_text[-1]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1ac57167cfbfec0f0ca6d10af63008969b" kindref="member">apply_indentation</ref>apply_indentation()</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1acc1ca774ac2d0697d8576eb06b776298" kindref="member">_text</ref>_text<sp/>+=<sp/>text</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a294bb3ee7ff764ae6c4014a8d5fe02c6" kindref="member">append_line</ref>(self,<sp/>text:<sp/>str)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Adds<sp/>text<sp/>to<sp/>the<sp/>generator.</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>will<sp/>append<sp/>a<sp/>newline<sp/>character<sp/>to<sp/>the<sp/>added<sp/>text.</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>text<sp/>Text<sp/>to<sp/>add.</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a72f14829a2d2b587031f5e85b41a8d54" kindref="member">at_start_of_line</ref>at_start_of_line:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1ac57167cfbfec0f0ca6d10af63008969b" kindref="member">apply_indentation</ref>apply_indentation()</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1adc5f44c0a319b77a1da9a0f97917cb0a" kindref="member">append</ref>append(text<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1ac57167cfbfec0f0ca6d10af63008969b" kindref="member">apply_indentation</ref>(self)<sp/>-&gt;<sp/>None:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Adds<sp/>whitespace<sp/>characters<sp/>to<sp/>apply<sp/>the<sp/>current<sp/>indentation<sp/>level.</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1acc1ca774ac2d0697d8576eb06b776298" kindref="member">_text</ref>_text<sp/>+=<sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a440e322ff0361cd8dcccd59a04b13214" kindref="member">_indent</ref>_indent<sp/>*<sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a8291810e5f2f34fb1416e3e55e441b81" kindref="member">_indent_level</ref>_indent_level</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a9dcb2fd0918caf4dc318ecda524532d9" kindref="member">decrease_indentation_level</ref>(self,<sp/>delta:<sp/>int<sp/>=<sp/>1)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Decreases<sp/>the<sp/>indentation<sp/>level<sp/>by<sp/>the<sp/>specified<sp/>amount.</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>delta<sp/>Amount<sp/>to<sp/>decrease<sp/>the<sp/>indentation<sp/>level<sp/>by.<sp/>Must<sp/>be<sp/>a</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>0.</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>delta<sp/>&gt;=<sp/>0</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1ab85a2c9f3571d82e7b871b08a37e9d9b" kindref="member">modify_indentation_level</ref>modify_indentation_level(-delta)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1ac794de83f5c6b8e98ef61814c5d509ab" kindref="member">finish_line</ref>(self)<sp/>-&gt;<sp/>None:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Finishes<sp/>the<sp/>current<sp/>line<sp/>if<sp/>not<sp/>currently<sp/>on<sp/>a<sp/>new<sp/>line.</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a72f14829a2d2b587031f5e85b41a8d54" kindref="member">at_start_of_line</ref>at_start_of_line:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a294bb3ee7ff764ae6c4014a8d5fe02c6" kindref="member">append_line</ref>append_line(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a1659c8bfe0508472c8b5235696804095" kindref="member">increase_indentation_level</ref>(self,<sp/>delta:<sp/>int<sp/>=<sp/>1)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Increases<sp/>the<sp/>indentation<sp/>level<sp/>by<sp/>the<sp/>specified<sp/>amount.</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>delta<sp/>Amount<sp/>to<sp/>increase<sp/>the<sp/>indentation<sp/>level<sp/>by.<sp/>Must<sp/>be<sp/>a</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>0.</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>delta<sp/>&gt;=<sp/>0</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1ab85a2c9f3571d82e7b871b08a37e9d9b" kindref="member">modify_indentation_level</ref>modify_indentation_level(delta)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1ab85a2c9f3571d82e7b871b08a37e9d9b" kindref="member">modify_indentation_level</ref>(self,<sp/>delta:<sp/>int)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Modifies<sp/>the<sp/>current<sp/>indentation<sp/>level<sp/>by<sp/>the<sp/>specified<sp/>amount.</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>delta<sp/>Amount<sp/>to<sp/>increase<sp/>or<sp/>decrease<sp/>the<sp/>indentation<sp/>level<sp/>by.</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>this<sp/>is<sp/>negative<sp/>and<sp/>the<sp/>resulting<sp/>indentation<sp/>level<sp/>is<sp/>less<sp/>than</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zero,<sp/>the<sp/>indentation<sp/>level<sp/>will<sp/>be<sp/>clamped<sp/>to<sp/>zero.</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a8291810e5f2f34fb1416e3e55e441b81" kindref="member">_indent_level</ref>_indent_level<sp/>+=<sp/>delta</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a8291810e5f2f34fb1416e3e55e441b81" kindref="member">_indent_level</ref>_indent_level<sp/>=<sp/>max(self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a8291810e5f2f34fb1416e3e55e441b81" kindref="member">_indent_level</ref>_indent_level,<sp/>0)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1a769c24014dd018498bde2e9f89069023" kindref="member">remove_last_instance_of</ref>(self,<sp/>text:<sp/>str)<sp/>-&gt;<sp/>bool:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Removes<sp/>the<sp/>last<sp/>instance<sp/>of<sp/>the<sp/>specified<sp/>text<sp/>from<sp/>the<sp/>generator.</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@param<sp/>text<sp/>Text<sp/>to<sp/>remove.</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@returns<sp/>True<sp/>if<sp/>the<sp/>text<sp/>was<sp/>found<sp/>and<sp/>removed;<sp/>otherwise,<sp/>false.</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1acc1ca774ac2d0697d8576eb06b776298" kindref="member">_text</ref>_text.rfind(text)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>index<sp/>&gt;=<sp/>0:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1acc1ca774ac2d0697d8576eb06b776298" kindref="member">_text</ref>_text<sp/>=<sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1acc1ca774ac2d0697d8576eb06b776298" kindref="member">_text</ref>_text[:index]<sp/>+<sp/>self.<ref refid="classpymake_1_1generators_1_1text__generator_1_1TextGenerator_1acc1ca774ac2d0697d8576eb06b776298" kindref="member">_text</ref>_text[index<sp/>+<sp/>len(text):]</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index<sp/>&gt;=<sp/>0</highlight></codeline>
    </programlisting>
    <location file="source/pymake/generators/text_generator.py"/>
  </compounddef>
</doxygen>
